"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[3051],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7780:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={id:"api",title:"API",sidebar_label:"API"},p=void 0,d={unversionedId:"preact-testing-library/api",id:"preact-testing-library/api",title:"API",description:"- @testing-library/dom",source:"@site/docs/preact-testing-library/api.mdx",sourceDirName:"preact-testing-library",slug:"/preact-testing-library/api",permalink:"/docs/preact-testing-library/api",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/preact-testing-library/api.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"api",title:"API",sidebar_label:"API"},sidebar:"docs",previous:{title:"Example",permalink:"/docs/preact-testing-library/example"},next:{title:"Learn",permalink:"/docs/preact-testing-library/learn"}},s={},u=[{value:"<code>@testing-library/dom</code>",id:"testing-librarydom",level:2},{value:"<code>render</code>",id:"render",level:2},{value:"Options",id:"options",level:3},{value:"Results",id:"results",level:3},{value:"<code>cleanup</code>",id:"cleanup",level:2},{value:"<code>act</code>",id:"act",level:2},{value:"<code>fireEvent</code>",id:"fireevent",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:3}],m={toc:u};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#testing-library-dom"},(0,l.kt)("inlineCode",{parentName:"a"},"@testing-library/dom"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#render"},(0,l.kt)("inlineCode",{parentName:"a"},"render"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#cleanup"},(0,l.kt)("inlineCode",{parentName:"a"},"cleanup"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#act"},(0,l.kt)("inlineCode",{parentName:"a"},"act"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#fireevent"},(0,l.kt)("inlineCode",{parentName:"a"},"fireEvent")))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"testing-librarydom"},(0,l.kt)("inlineCode",{parentName:"h2"},"@testing-library/dom")),(0,l.kt)("p",null,"This library re-exports everything from the DOM Testing Library\n(",(0,l.kt)("inlineCode",{parentName:"p"},"@testing-library/dom"),"). See the ",(0,l.kt)("a",{parentName:"p",href:"/docs/queries/about"},"documentation")," to see what\ngoodies you can use."),(0,l.kt)("h2",{id:"render"},(0,l.kt)("inlineCode",{parentName:"h2"},"render")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import {render} from '@testing-library/preact'\n\nconst {results} = render(<YourComponent />, {options})\n")),(0,l.kt)("h3",{id:"options"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"container")),(0,l.kt)("td",{parentName:"tr",align:null},"The HTML element the component is mounted to."),(0,l.kt)("td",{parentName:"tr",align:null},"baseElement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"baseElement")),(0,l.kt)("td",{parentName:"tr",align:null},"The root HTML element to which the container is appended to."),(0,l.kt)("td",{parentName:"tr",align:null},"document.body")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"queries")),(0,l.kt)("td",{parentName:"tr",align:null},"Queries to bind to the baseElement. See ",(0,l.kt)("a",{parentName:"td",href:"/docs/dom-testing-library/api-within"},"within"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hydrate")),(0,l.kt)("td",{parentName:"tr",align:null},"Used when the component has already been mounted and requires a rerender. Not needed for most people. The rerender function passed back to you does this already."),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"wrapper")),(0,l.kt)("td",{parentName:"tr",align:null},"A parent component to wrap YourComponent."),(0,l.kt)("td",{parentName:"tr",align:null},"null")))),(0,l.kt)("h3",{id:"results"},"Results"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"container")),(0,l.kt)("td",{parentName:"tr",align:null},"The HTML element the component is mounted to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"baseElement")),(0,l.kt)("td",{parentName:"tr",align:null},"The root HTML element to which the container is appended to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"debug")),(0,l.kt)("td",{parentName:"tr",align:null},"Logs the baseElement using ",(0,l.kt)("a",{parentName:"td",href:"/docs/dom-testing-library/api-debugging#prettydom"},"prettyDom"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"unmount")),(0,l.kt)("td",{parentName:"tr",align:null},"Unmounts the component from the container.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"rerender")),(0,l.kt)("td",{parentName:"tr",align:null},"Calls render again passing in the original arguments and sets hydrate to true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"asFragment")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the innerHTML of the container.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"...queries")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns all ",(0,l.kt)("a",{parentName:"td",href:"/docs/queries/about"},"query functions")," to be used on the baseElement. If you pass in ",(0,l.kt)("inlineCode",{parentName:"td"},"query")," arguments than this will be those, otherwise all.")))),(0,l.kt)("h2",{id:"cleanup"},(0,l.kt)("inlineCode",{parentName:"h2"},"cleanup")),(0,l.kt)("p",null,"Unmounts the component from the container and destroys the container."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This is called automatically if your testing framework (such as mocha, Jest or\nJasmine) injects a global ",(0,l.kt)("inlineCode",{parentName:"p"},"afterEach()")," function into the testing environment.\nIf not, you will need to call ",(0,l.kt)("inlineCode",{parentName:"p"},"cleanup()")," after each test.")),(0,l.kt)("p",null,"If you'd like to disable this then set ",(0,l.kt)("inlineCode",{parentName:"p"},"process.env.PTL_SKIP_AUTO_CLEANUP")," to\ntrue when running your tests."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import {render, cleanup} from '@testing-library/preact'\n\nafterEach(() => {\n  cleanup()\n}) // Default on import: runs it after each test.\n\nrender(<YourComponent />)\n\ncleanup() // Or like this for more control.\n")),(0,l.kt)("h2",{id:"act"},(0,l.kt)("inlineCode",{parentName:"h2"},"act")),(0,l.kt)("p",null,"Just a convenience export that points to preact/test-utils/act. All renders and\nevents being fired are wrapped in ",(0,l.kt)("inlineCode",{parentName:"p"},"act"),", so you don't really need this. It's\nresponsible for flushing all effects and rerenders after invoking it."),(0,l.kt)("p",null,"\ud83d\udcdd If you'd love to learn more, checkout\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/threepointone/react-act-examples/blob/master/sync.md"},"this explanation"),".\nEven though it's for React, it gives you an idea of why it's needed."),(0,l.kt)("h2",{id:"fireevent"},(0,l.kt)("inlineCode",{parentName:"h2"},"fireEvent")),(0,l.kt)("p",null,"Passes it to the @testing-library/dom\n",(0,l.kt)("a",{parentName:"p",href:"/docs/dom-testing-library/api-events"},"fireEvent"),". It's also wrapped in ",(0,l.kt)("inlineCode",{parentName:"p"},"act")," so\nyou don't need to worry about doing it."),(0,l.kt)("p",null,"\ud83d\udcdd Keep in mind mainly when using ",(0,l.kt)("inlineCode",{parentName:"p"},"h / Preact.createElement")," that React uses a\nSynthetic event system, and Preact uses the browser's native ",(0,l.kt)("inlineCode",{parentName:"p"},"addEventListener"),"\nfor event handling. This means events like ",(0,l.kt)("inlineCode",{parentName:"p"},"onChange")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"onDoubleClick")," in\nReact, are ",(0,l.kt)("inlineCode",{parentName:"p"},"onInput")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"onDblClick")," in Preact. The double click example will\ngive you an idea of how to test using those functions."),(0,l.kt)("h3",{id:"example-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const cb = jest.fn()\n\nfunction Counter() {\n  useEffect(cb)\n\n  const [count, setCount] = useState(0)\n\n  return <button onClick={() => setCount(count + 1)}>{count}</button>\n}\n\nconst {\n  container: {firstChild: buttonNode},\n} = render(<Counter />)\n\n// Clear the first call to useEffect that the initial render triggers.\ncb.mockClear()\n\n// Fire event Option 1.\nfireEvent.click(buttonNode)\n\n// Fire event Option 2.\nfireEvent(\n  buttonNode,\n  new MouseEvent('click', {\n    bubbles: true,\n    cancelable: true,\n    button: 0,\n  }),\n)\n\nexpect(buttonNode).toHaveTextContent('1')\nexpect(cb).toHaveBeenCalledTimes(1)\n")),(0,l.kt)("h3",{id:"example-2"},"Example 2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const handler = jest.fn()\n\nconst {\n  container: {firstChild: input},\n} = render(<input type=\"text\" onInput={handler} />)\n\nfireEvent.input(input, {target: {value: 'a'}})\n\nexpect(handler).toHaveBeenCalledTimes(1)\n")),(0,l.kt)("h3",{id:"example-3"},"Example 3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const ref = createRef()\nconst spy = jest.fn()\n\nrender(\n  h(elementType, {\n    onDblClick: spy,\n    ref,\n  }),\n)\n\nfireEvent['onDblClick'](ref.current)\n\nexpect(spy).toHaveBeenCalledTimes(1)\n")))}c.isMDXComponent=!0}}]);