"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[4623],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=a,g=d["".concat(s,".").concat(h)]||d[h]||p[h]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7294),a=n(6010);const i="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(i,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>h});var r=n(7462),a=n(7294),i=n(6010),o=n(2389),l=n(7392),s=n(7094),u=n(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n,o=e.lazy,d=e.block,h=e.defaultValue,g=e.values,m=e.groupId,b=e.className,f=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=g?g:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),w=(0,l.l)(y,(function(e,t){return e.value===t.value}));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===h?h:null!=(t=null!=h?h:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:f[0].props.value;if(null!==v&&!y.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=(0,s.U)(),T=k.tabGroupChoices,N=k.setTabGroupChoices,x=(0,a.useState)(v),C=x[0],O=x[1],E=[],q=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var j=T[m];null!=j&&j!==C&&y.some((function(e){return e.value===j}))&&O(j)}var I=function(e){var t=e.currentTarget,n=E.indexOf(t),r=y[n].value;r!==C&&(q(t),O(r),null!=m&&N(m,String(r)))},B=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r,a=E.indexOf(e.currentTarget)+1;n=null!=(r=E[a])?r:E[0];break;case"ArrowLeft":var i,o=E.indexOf(e.currentTarget)-1;n=null!=(i=E[o])?i:E[E.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,i.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},b)},y.map((function(e){var t=e.value,n=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:function(e){return E.push(e)},onKeyDown:B,onFocus:I,onClick:I},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":C===t})}),null!=n?n:t)}))),o?(0,a.cloneElement)(f.filter((function(e){return e.props.value===C}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function h(e){var t=(0,o.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},7970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>u,metadata:()=>p,toc:()=>h});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(5488),l=n(5162),s=["components"],u={id:"intro",title:"Nightwatch Testing Library"},c=void 0,p={unversionedId:"nightwatch-testing-library/intro",id:"nightwatch-testing-library/intro",title:"Nightwatch Testing Library",description:"nightwatch-testing-library allows the use of dom-testing-library queries",source:"@site/docs/nightwatch-testing-library/intro.mdx",sourceDirName:"nightwatch-testing-library",slug:"/nightwatch-testing-library/intro",permalink:"/docs/nightwatch-testing-library/intro",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/nightwatch-testing-library/intro.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750827853,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"intro",title:"Nightwatch Testing Library"},sidebar:"docs",previous:{title:"Testcafe Testing Library",permalink:"/docs/testcafe-testing-library/intro"},next:{title:"WebdriverIO Testing Library",permalink:"/docs/webdriverio-testing-library/intro"}},d={},h=[{value:"Install",id:"install",level:2},{value:"READ THIS FIRST",id:"read-this-first",level:2},{value:"Usage",id:"usage",level:2},{value:"<code>AllBy</code> queries",id:"allby-queries",level:3},{value:"Configure",id:"configure",level:2},{value:"Containers",id:"containers",level:2},{value:"Examples using <code>within</code>",id:"examples-using-within",level:3}],g={toc:h};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/nightwatch-testing-library"},(0,i.kt)("inlineCode",{parentName:"a"},"nightwatch-testing-library"))," allows the use of dom-testing-library queries\nin ",(0,i.kt)("a",{parentName:"p",href:"https://nightwatchjs.org"},"Nightwatch")," for end-to-end web testing."),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Be sure to follow the\n",(0,i.kt)("a",{parentName:"p",href:"https://nightwatchjs.org/gettingstarted/installation/"},"Nightwatch install & config instructions first"))),(0,i.kt)("p",null,"then just"),(0,i.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @testing-library/nightwatch\n"))),(0,i.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev @testing-library/nightwatch\n")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/testing-library/nightwatch-testing-library"},"nightwatch-testing-library on GitHub"))),(0,i.kt)("h2",{id:"read-this-first"},"READ THIS FIRST"),(0,i.kt)("p",null,"At it's core, ",(0,i.kt)("inlineCode",{parentName:"p"},"nightwatch-testing-library")," translates between\ndom-testing-library queries and css selectors. This is due to the fact that\nNightwatch adheres to the WebDriver standards for\n",(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/webdriver/#locator-strategies"},"locator strategies"),". For\nnow, this means that the logging will have some very detailed css paths. PRs\nwelcome for a\n",(0,i.kt)("a",{parentName:"p",href:"https://nightwatchjs.org/guide/extending-nightwatch/#custom-reporter"},"custom reporter"),"\nto solve this problem\xa0\ud83e\udd17."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"So remember, the results from NWTL queries are WebDriver locators, not DOM\nnodes.")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note, in NWTL, all queries must be ",(0,i.kt)("inlineCode",{parentName:"p"},"await"),"ed.")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const {getQueriesFrom} = require('@testing-library/nightwatch')\n\nmodule.exports = {\n  beforeEach(browser, done) {\n    browser.url('http://localhost:13370')\n    done()\n  },\n\n  async getByLabelText(browser) {\n    const {getByLabelText} = getQueriesFrom(browser)\n\n    const input = await getByLabelText('Label Text')\n    browser.setValue(input, '@TL FTW')\n\n    browser.expect.element(input).value.to.equal('@TL FTW')\n  },\n\n  async getByAltText(browser) {\n    const {getByAltText} = getQueriesFrom(browser)\n    const image = await getByAltText('Image Alt Text')\n\n    browser.click(image)\n    browser.expect\n      .element(image)\n      .to.have.css('border')\n      .which.equals('5px solid rgb(255, 0, 0)')\n  },\n}\n")),(0,i.kt)("h3",{id:"allby-queries"},(0,i.kt)("inlineCode",{parentName:"h3"},"AllBy")," queries"),(0,i.kt)("p",null,"The results of ",(0,i.kt)("inlineCode",{parentName:"p"},"AllBy")," queries have an additional function added to them: ",(0,i.kt)("inlineCode",{parentName:"p"},"nth"),"\nwhich can be used in nightwatch functions as well as in the ",(0,i.kt)("inlineCode",{parentName:"p"},"within")," function of\nNWTL."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"\n    async 'getAllByText - regex'(browser) {\n        const { getAllByText } = getQueriesFrom(browser);\n        const chans = await getAllByText(/Jackie Chan/)\n\n\n        browser.expect.elements(chans).count.to.equal(2)\n\n        const firstChan = chans.nth(0);\n        const secondChan = chans.nth(1);\n\n\n        browser.click(chans.nth(0));\n        browser.click(chans.nth(1));\n\n        browser.expect.element(secondChan).text.to.equal('Jackie Kicked');\n        browser.expect.element(firstChan).text.to.equal('Jackie Kicked');\n\n    },\n\n")),(0,i.kt)("h2",{id:"configure"},"Configure"),(0,i.kt)("p",null,"You can customize the testIdAttribute using the ",(0,i.kt)("inlineCode",{parentName:"p"},"configure")," function just like\n",(0,i.kt)("a",{parentName:"p",href:"/docs/dom-testing-library/api-configuration"},"dom-testing-library"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const {configure} = require('@testing-library/nightwatch')\n\nconfigure({testIdAttribute: 'data-automation-id'})\n")),(0,i.kt)("h2",{id:"containers"},"Containers"),(0,i.kt)("p",null,"By default the queries come pre-bound to ",(0,i.kt)("inlineCode",{parentName:"p"},"document.body"),", so no need to provide\na container. However, if you want to restrict your query using a container, you\ncan use ",(0,i.kt)("inlineCode",{parentName:"p"},"within"),"."),(0,i.kt)("h3",{id:"examples-using-within"},"Examples using ",(0,i.kt)("inlineCode",{parentName:"h3"},"within")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const {getQueriesFrom, within} = require('@testing-library/nightwatch')\n\nmodule.exports = {\n  beforeEach(browser, done) {\n    browser.url('http://localhost:13370')\n    done()\n  },\n  async 'getByText within container'(browser) {\n    const {getByTestId} = getQueriesFrom(browser)\n\n    const nested = await getByTestId('nested')\n    const button = await within(nested).getByText('Button Text')\n\n    browser.click(button)\n    browser.expect.element(button).text.to.equal('Button Clicked')\n  },\n}\n")))}m.isMDXComponent=!0}}]);