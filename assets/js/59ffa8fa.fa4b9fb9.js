"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[1228],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),l=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),k=l(a),u=n,m=k["".concat(s,".").concat(u)]||k[u]||c[u]||o;return a?r.createElement(m,i(i({ref:t},d),{},{components:a})):r.createElement(m,i({ref:t},d))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=k;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var l=2;l<o;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},6287:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>p,metadata:()=>l,toc:()=>c});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),i=["components"],p={id:"keyboard",title:"Keyboard"},s=void 0,l={unversionedId:"user-event/keyboard",id:"user-event/keyboard",title:"Keyboard",description:"The keyboard API allows to simulate interactions with a keyboard. It accepts a",source:"@site/docs/user-event/api-keyboard.mdx",sourceDirName:"user-event",slug:"/user-event/keyboard",permalink:"/docs/user-event/keyboard",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/user-event/api-keyboard.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750827853,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"keyboard",title:"Keyboard"},sidebar:"docs",previous:{title:"Pointer",permalink:"/docs/user-event/pointer"},next:{title:"Clipboard",permalink:"/docs/user-event/clipboard"}},d={},c=[],k={toc:c};function u(e){var t=e.components,a=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"keyboard(input: KeyboardInput): Promise<void>\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"keyboard")," API allows to simulate interactions with a keyboard. It accepts a\n",(0,o.kt)("inlineCode",{parentName:"p"},"string")," describing the key actions."),(0,o.kt)("p",null,"Keystrokes can be described:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Per printable character"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"keyboard('foo') // translates to: f, o, o\n")),(0,o.kt)("p",{parentName:"li"},"The opening brackets ",(0,o.kt)("inlineCode",{parentName:"p"},"{")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"[")," are used as special characters and can be\nreferenced by doubling them."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"keyboard('{{a[[') // translates to: {, a, [\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Per\n",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key"},"KeyboardEvent.key")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"keyboard('{Shift}{f}{o}{o}') // translates to: Shift, f, o, o\n")),(0,o.kt)("p",{parentName:"li"},"This does not keep any key pressed. So ",(0,o.kt)("inlineCode",{parentName:"p"},"Shift")," will be lifted before pressing\n",(0,o.kt)("inlineCode",{parentName:"p"},"f"),"."),(0,o.kt)("p",{parentName:"li"},"Characters with special meaning inside the key descriptor can be escaped by\nprefixing them with a backslash ",(0,o.kt)("inlineCode",{parentName:"p"},"\\"),"."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"keyboard('{\\\\}}') // translates to: }\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Per\n",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code"},"KeyboardEvent.code")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"keyboard('[ShiftLeft][KeyF][KeyO][KeyO]') // translates to: Shift, f, o, o\n")))),(0,o.kt)("p",null,"Keys can be kept pressed by adding a ",(0,o.kt)("inlineCode",{parentName:"p"},">")," to the end of the descriptor.",(0,o.kt)("br",{parentName:"p"}),"\n","If this should result in repeated ",(0,o.kt)("inlineCode",{parentName:"p"},"keydown")," events, you can add the number of\nrepetitions.",(0,o.kt)("br",{parentName:"p"}),"\n","If the key should also be released after this, add a slash ",(0,o.kt)("inlineCode",{parentName:"p"},"/")," to the end of the\ndescriptor."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"keyboard('{a>}') // press a without releasing it\nkeyboard('{a>5}') // press a without releasing it and trigger 5 keydown\nkeyboard('{a>5/}') // press a for 5 keydown and then release it\n")),(0,o.kt)("p",null,"A previously pressed key can be lifted by prefixing the descriptor with ",(0,o.kt)("inlineCode",{parentName:"p"},"/"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"keyboard('{/a}') // release a previously pressed a\n")),(0,o.kt)("p",null,"This allows to simulate key combinations."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"keyboard('{Shift>}A{/Shift}') // translates to: Shift(down), A, Shift(up)\n")),(0,o.kt)("p",null,"The mapping of ",(0,o.kt)("inlineCode",{parentName:"p"},"key")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"code")," is performed by a\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/testing-library/user-event/blob/main/src/keyboard/keyMap.ts"},"default key map"),'\nportraying a "default" US-keyboard. You can provide your own local keyboard\nmapping per ',(0,o.kt)("a",{parentName:"p",href:"/docs/user-event/options#keyboardmap"},(0,o.kt)("inlineCode",{parentName:"a"},"keyboardMap"))," option."),(0,o.kt)("p",null,"Currently the different ",(0,o.kt)("inlineCode",{parentName:"p"},"key")," meanings of single keys are treated as different\nkeys."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Future versions might try to interpolate the modifiers needed to reach a\nprintable key on the keyboard. E.g. Automatically pressing ",(0,o.kt)("inlineCode",{parentName:"p"},"{Shift}")," when\nCapsLock is not active and ",(0,o.kt)("inlineCode",{parentName:"p"},"A")," is referenced. If you don't wish this behavior,\nyou can deactivate the ",(0,o.kt)("a",{parentName:"p",href:"/docs/user-event/options#automodify"},(0,o.kt)("inlineCode",{parentName:"a"},"autoModify"))," option to opt\nout of this non-breaking change.")))}u.isMDXComponent=!0}}]);