"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[1141],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,b=m["".concat(s,".").concat(d)]||m[d]||p[d]||l;return r?n.createElement(b,i(i({ref:t},c),{},{components:r})):n.createElement(b,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(7294),a=r(6010);const l="tabItem_Ymn6";function i(e){var t=e.children,r=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,i),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>d});var n=r(7462),a=r(7294),l=r(6010),i=r(2389),o=r(7392),s=r(7094),u=r(2466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){var t,r,i=e.lazy,m=e.block,d=e.defaultValue,b=e.values,y=e.groupId,f=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=b?b:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,o.l)(g,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(t=null!=d?d:null==(r=v.find((function(e){return e.props.default})))?void 0:r.props.value)?t:v[0].props.value;if(null!==k&&!g.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var T=(0,s.U)(),w=T.tabGroupChoices,O=T.setTabGroupChoices,x=(0,a.useState)(k),N=x[0],E=x[1],I=[],j=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=y){var P=w[y];null!=P&&P!==N&&g.some((function(e){return e.value===P}))&&E(P)}var D=function(e){var t=e.currentTarget,r=I.indexOf(t),n=g[r].value;n!==N&&(j(t),E(n),null!=y&&O(y,String(n)))},Z=function(e){var t,r=null;switch(e.key){case"ArrowRight":var n,a=I.indexOf(e.currentTarget)+1;r=null!=(n=I[a])?n:I[0];break;case"ArrowLeft":var l,i=I.indexOf(e.currentTarget)-1;r=null!=(l=I[i])?l:I[I.length-1]}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},f)},g.map((function(e){var t=e.value,r=e.label,i=e.attributes;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:function(e){return I.push(e)},onKeyDown:Z,onFocus:D,onClick:D},i,{className:(0,l.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":N===t})}),null!=r?r:t)}))),i?(0,a.cloneElement)(v.filter((function(e){return e.props.value===N}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function d(e){var t=(0,i.Z)();return a.createElement(m,(0,n.Z)({key:String(t)},e))}},744:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>y,frontMatter:()=>u,metadata:()=>p,toc:()=>d});var n=r(7462),a=r(3366),l=(r(7294),r(3905)),i=r(5488),o=r(5162),s=["components"],u={id:"ecosystem-testing-library-selector",title:"testing-library-selector"},c=void 0,p={unversionedId:"ecosystem-testing-library-selector",id:"ecosystem-testing-library-selector",title:"testing-library-selector",description:"testing-library-selector is a library for @testing-library that",source:"@site/docs/ecosystem-testing-library-selector.md",sourceDirName:".",slug:"/ecosystem-testing-library-selector",permalink:"/docs/ecosystem-testing-library-selector",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/ecosystem-testing-library-selector.md",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"ecosystem-testing-library-selector",title:"testing-library-selector"},sidebar:"docs",previous:{title:"rtl-simple-queries",permalink:"/docs/ecosystem-rtl-simple-queries"},next:{title:"cli-testing-library",permalink:"/docs/ecosystem-cli-testing-library"}},m={},d=[],b={toc:d};function y(e){var t=e.components,r=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/domasx2/testing-library-selector"},(0,l.kt)("inlineCode",{parentName:"a"},"testing-library-selector"))," is a library for ",(0,l.kt)("inlineCode",{parentName:"p"},"@testing-library")," that\nprovides reusable selectors. Written in typescript."),(0,l.kt)(i.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev testing-library-selector\n"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev testing-library-selector\n")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import {byLabelText, byRole, byTestId} from './selector'\n\n// define reusable selectors\nconst ui = {\n  container: byTestId('my-container'),\n  submitButton: byRole('button', {name: 'Submit'}),\n  usernameInput: byLabelText('Username:'),\n\n  // can encode more specific html element type\n  passwordInput: byLabelText<HTMLInputElement>('Password:'),\n}\n\n// reuse them in the same test or across multiple tests by calling\n// .get(), .getAll(), .find(), .findAll(), .query(), .queryAll()\nit('example test', async () => {\n  // by default elements will be queried against screen\n  await ui.submitButton.find()\n  expect(ui.submitButton.query()).not.toBeInDocument()\n  expect(ui.submitButton.get()).toBeInDocument()\n\n  const containers = ui.container.getAll()\n  expect(containers).toHaveLength(3)\n\n  // provide a container as first param to query element inside that container\n  const username = ui.usernameInput.get(containers[0])\n})\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/domasx2/testing-library-selector"},"testing-library-selector on GitHub"))))}y.isMDXComponent=!0}}]);