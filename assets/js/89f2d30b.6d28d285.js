"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[7831],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),u=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=u(t.components);return r.createElement(l.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(h,o(o({ref:e},c),{},{components:n})):r.createElement(h,o({ref:e},c))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1349:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={id:"faq",title:"FAQ"},l=void 0,u={unversionedId:"dom-testing-library/faq",id:"dom-testing-library/faq",title:"FAQ",description:"Which get method should I use?",source:"@site/docs/dom-testing-library/faq.mdx",sourceDirName:"dom-testing-library",slug:"/dom-testing-library/faq",permalink:"/docs/dom-testing-library/faq",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/dom-testing-library/faq.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"faq",title:"FAQ"},sidebar:"docs",previous:{title:"Guiding Principles",permalink:"/docs/guiding-principles"},next:{title:"About Queries",permalink:"/docs/queries/about"}},c={},p=[],d={toc:p};function m(t){var e=t.components,n=(0,a.Z)(t,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Which get method should I use?"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/docs/queries/about#priority"},"Which Query Should I Use"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Can I write unit tests with this library?"),(0,i.kt)("p",null,"Definitely yes! You can write unit, integration, and end-to-end tests with this\nlibrary."),(0,i.kt)("p",null,"As you write your tests, keep in mind:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The more your tests resemble the way your software is used, the more\nconfidence they can give you. - ",(0,i.kt)("a",{parentName:"p",href:"https://twitter.com/kentcdodds/status/977018512689455106"},"17 Feb 2018")))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"What if my app is localized and I don't have access to the text in test?"),(0,i.kt)("p",null,"This is fairly common. Our first bit of advice is to try to get the default text\nused in your tests. That will make everything much easier (more than just using\nthis utility). If that's not possible, then you're probably best to just stick\nwith ",(0,i.kt)("inlineCode",{parentName:"p"},"data-testid"),"s (which is not bad anyway).")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"I really don't like data-testids, but none of the other queries make sense. Do I have to use a data-testid?"),(0,i.kt)("p",null,"Definitely not. That said, a common reason people don't like the ",(0,i.kt)("inlineCode",{parentName:"p"},"data-testid"),"\nattribute is they're concerned about shipping that to production. I'd suggest\nthat you probably want some simple E2E tests that run in production on occasion\nto make certain that things are working smoothly. In that case the ",(0,i.kt)("inlineCode",{parentName:"p"},"data-testid"),"\nattributes will be very useful. Even if you don't run these in production, you\nmay want to run some E2E tests that run on the same code you're about to ship to\nproduction. In that case, the ",(0,i.kt)("inlineCode",{parentName:"p"},"data-testid")," attributes will be valuable there as\nwell."),(0,i.kt)("p",null,"All that said, if you really don't want to ship ",(0,i.kt)("inlineCode",{parentName:"p"},"data-testid")," attributes, then\nyou can use\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/babel-plugin-react-remove-properties"},"this simple babel plugin"),"\nto remove them."),(0,i.kt)("p",null,"If you don't want to use them at all, then you can simply use regular DOM\nmethods and properties to query elements off your container."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const firstLiInDiv = container.querySelector('div li')\nconst allLisInDiv = container.querySelectorAll('div li')\nconst rootElement = container.firstChild\n"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,'What if I\u2019m iterating over a list of items that I want to put the data-testid="item" attribute on. How do I distinguish them from each other?'),(0,i.kt)("p",null,"You can make your selector just choose the one you want by including :nth-child\nin the selector."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const thirdLiInUl = container.querySelector('ul > li:nth-child(3)')\n")),(0,i.kt)("p",null,"Or you could use ",(0,i.kt)("inlineCode",{parentName:"p"},"getAllByRole")," to query the ",(0,i.kt)("inlineCode",{parentName:"p"},"listitem")," role and access the\nindex in question:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const items = [\n  /* your items */\n]\nconst {container} = render(/* however you render this stuff */)\nconst thirdItem = getAllByRole(container, 'listitem')[2]\n"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Help! I can't access component methods or the component instance!"),(0,i.kt)("p",null,"This is ",(0,i.kt)("strong",{parentName:"p"},"intentional"),"."),(0,i.kt)("p",null,"We want you to focus on testing the output and functionality of the component as\nit is observed by the user and to ",(0,i.kt)("strong",{parentName:"p"},"avoid worrying about the implementation\ndetails")," of the component."),(0,i.kt)("p",null,"We believe this leads to less brittle and more meaningful test code."),(0,i.kt)("p",null,"Please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/guiding-principles"},"Guiding Principles")," of this testing\nlibrary for more info.")))}m.isMDXComponent=!0}}]);