"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[8411],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,y=d["".concat(o,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(y,s(s({ref:t},u),{},{components:n})):r.createElement(y,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(7294),a=n(6010);const i="tabItem_Ymn6";function s(e){var t=e.children,n=e.hidden,s=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(i,s),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(7462),a=n(7294),i=n(6010),s=n(2389),l=n(7392),o=n(7094),p=n(2466);const u="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,n,s=e.lazy,d=e.block,m=e.defaultValue,y=e.values,b=e.groupId,f=e.className,g=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=y?y:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.l)(h,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===m?m:null!=(t=null!=m?m:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:g[0].props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,o.U)(),T=N.tabGroupChoices,C=N.setTabGroupChoices,w=(0,a.useState)(k),x=w[0],O=w[1],j=[],E=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var L=T[b];null!=L&&L!==x&&h.some((function(e){return e.value===L}))&&O(L)}var D=function(e){var t=e.currentTarget,n=j.indexOf(t),r=h[n].value;r!==x&&(E(t),O(r),null!=b&&C(b,String(r)))},q=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r,a=j.indexOf(e.currentTarget)+1;n=null!=(r=j[a])?r:j[0];break;case"ArrowLeft":var i,s=j.indexOf(e.currentTarget)-1;n=null!=(i=j[s])?i:j[j.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,i.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},f)},h.map((function(e){var t=e.value,n=e.label,s=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:function(e){return j.push(e)},onKeyDown:q,onFocus:D,onClick:D},s,{className:(0,i.Z)("tabs__item",c,null==s?void 0:s.className,{"tabs__item--active":x===t})}),null!=n?n:t)}))),s?(0,a.cloneElement)(g.filter((function(e){return e.props.value===x}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function m(e){var t=(0,s.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},7581:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>b,frontMatter:()=>p,metadata:()=>c,toc:()=>m});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=n(5488),l=n(5162),o=["components"],p={id:"intro",title:"Cypress Testing Library"},u=void 0,c={unversionedId:"cypress-testing-library/intro",id:"cypress-testing-library/intro",title:"Cypress Testing Library",description:"Cypress Testing Library allows the use of dom-testing queries within",source:"@site/docs/cypress-testing-library/intro.mdx",sourceDirName:"cypress-testing-library",slug:"/cypress-testing-library/intro",permalink:"/docs/cypress-testing-library/intro",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/cypress-testing-library/intro.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"intro",title:"Cypress Testing Library"},sidebar:"docs",previous:{title:"FAQ",permalink:"/docs/qwik-testing-library/faq"},next:{title:"Puppeteer Testing Library",permalink:"/docs/pptr-testing-library/intro"}},d={},m=[{value:"Usage",id:"usage",level:2},{value:"With TypeScript",id:"with-typescript",level:2},{value:"Examples",id:"examples",level:2}],y={toc:m};function b(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/cypress-testing-library"},(0,i.kt)("inlineCode",{parentName:"a"},"Cypress Testing Library"))," allows the use of dom-testing queries within\n",(0,i.kt)("a",{parentName:"p",href:"https://cypress.io"},"Cypress")," end-to-end browser tests."),(0,i.kt)(s.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev cypress @testing-library/cypress\n"))),(0,i.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev cypress @testing-library/cypress\n")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/testing-library/cypress-testing-library"},"Cypress Testing Library on GitHub"))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Cypress Testing Library")," extends Cypress's ",(0,i.kt)("inlineCode",{parentName:"p"},"cy")," commands."),(0,i.kt)("p",null,"Add this line to your project's ",(0,i.kt)("inlineCode",{parentName:"p"},"cypress/support/commands.js"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import '@testing-library/cypress/add-commands'\n")),(0,i.kt)("p",null,"You can now use some of ",(0,i.kt)("inlineCode",{parentName:"p"},"DOM Testing Library"),"'s ",(0,i.kt)("inlineCode",{parentName:"p"},"findBy"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"findAllBy")," commands off the global ",(0,i.kt)("inlineCode",{parentName:"p"},"cy")," object.\n",(0,i.kt)("a",{parentName:"p",href:"/docs/queries/about"},"See the ",(0,i.kt)("inlineCode",{parentName:"a"},"About queries")," docs for reference"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: the ",(0,i.kt)("inlineCode",{parentName:"p"},"get*")," queries are not supported because for reasonable Cypress\ntests you need retryability and ",(0,i.kt)("inlineCode",{parentName:"p"},"find*")," queries already support that. ",(0,i.kt)("inlineCode",{parentName:"p"},"query*"),"\nqueries are no longer necessary since v5 and will be removed in v6. ",(0,i.kt)("inlineCode",{parentName:"p"},"find*"),"\nfully support built-in Cypress assertions (removes the only use-case for\n",(0,i.kt)("inlineCode",{parentName:"p"},"query*"),").")),(0,i.kt)("h2",{id:"with-typescript"},"With TypeScript"),(0,i.kt)("p",null,"Typings should be added as follows in ",(0,i.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "types": ["cypress", "@testing-library/cypress"]\n  }\n}\n')),(0,i.kt)("p",null,"You can find\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/cypress-testing-library/blob/master/types/index.d.ts"},"all Library definitions here"),"."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"To show some simple examples (from\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/cypress-testing-library/blob/97939da7d4707a71049884c0324c0eda56e26fc2/cypress/integration/find.spec.js"},"cypress/integration/find.spec.js"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.findByRole('button', {name: /Jackie Chan/i}).click()\ncy.findByRole('button', {name: /Button Text/i}).should('exist')\ncy.findByRole('button', {name: /Non-existing Button Text/i}).should('not.exist')\ncy.findByLabelText(/Label text/i, {timeout: 7000}).should('exist')\n\n// findByRole _inside_ a form element\ncy.get('form')\n  .findByRole('button', {name: /Button Text/i})\n  .should('exist')\ncy.findByRole('dialog').within(() => {\n  cy.findByRole('button', {name: /confirm/i})\n})\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Cypress Testing Library")," supports both jQuery elements and DOM nodes. This is\nnecessary because Cypress uses jQuery elements, while ",(0,i.kt)("inlineCode",{parentName:"p"},"DOM Testing Library"),"\nexpects DOM nodes. When you pass a jQuery element as ",(0,i.kt)("inlineCode",{parentName:"p"},"container"),", it will get\nthe first DOM node from the collection and use that as the ",(0,i.kt)("inlineCode",{parentName:"p"},"container")," parameter\nfor the ",(0,i.kt)("inlineCode",{parentName:"p"},"DOM Testing Library")," functions."))}b.isMDXComponent=!0}}]);