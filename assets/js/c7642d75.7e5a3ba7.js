"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[1495],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,b=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return r?n.createElement(b,o(o({ref:t},c),{},{components:r})):n.createElement(b,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7294),a=r(6010);const i="tabItem_Ymn6";function o(e){var t=e.children,r=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(i,o),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>d});var n=r(7462),a=r(7294),i=r(6010),o=r(2389),l=r(7392),s=r(7094),u=r(2466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){var t,r,o=e.lazy,m=e.block,d=e.defaultValue,b=e.values,f=e.groupId,v=e.className,y=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=b?b:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,l.l)(h,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(t=null!=d?d:null==(r=y.find((function(e){return e.props.default})))?void 0:r.props.value)?t:y[0].props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,s.U)(),N=w.tabGroupChoices,T=w.setTabGroupChoices,O=(0,a.useState)(k),E=O[0],x=O[1],j=[],I=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var _=N[f];null!=_&&_!==E&&h.some((function(e){return e.value===_}))&&x(_)}var C=function(e){var t=e.currentTarget,r=j.indexOf(t),n=h[r].value;n!==E&&(I(t),x(n),null!=f&&T(f,String(n)))},P=function(e){var t,r=null;switch(e.key){case"ArrowRight":var n,a=j.indexOf(e.currentTarget)+1;r=null!=(n=j[a])?n:j[0];break;case"ArrowLeft":var i,o=j.indexOf(e.currentTarget)-1;r=null!=(i=j[o])?i:j[j.length-1]}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,i.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":m},v)},h.map((function(e){var t=e.value,r=e.label,o=e.attributes;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return j.push(e)},onKeyDown:P,onFocus:C,onClick:C},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":E===t})}),null!=r?r:t)}))),o?(0,a.cloneElement)(y.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},y.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function d(e){var t=(0,o.Z)();return a.createElement(m,(0,n.Z)({key:String(t)},e))}},8825:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>f,frontMatter:()=>u,metadata:()=>p,toc:()=>d});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=r(5488),l=r(5162),s=["components"],u={id:"intro",title:"Introduction",sidebar_label:"Introduction"},c=void 0,p={unversionedId:"react-native-testing-library/intro",id:"react-native-testing-library/intro",title:"Introduction",description:"React Native Testing Library is a testing library for React Native inspired",source:"@site/docs/react-native-testing-library/intro.mdx",sourceDirName:"react-native-testing-library",slug:"/react-native-testing-library/intro",permalink:"/docs/react-native-testing-library/intro",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/react-native-testing-library/intro.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"intro",title:"Introduction",sidebar_label:"Introduction"},sidebar:"docs",previous:{title:"Example",permalink:"/docs/bs-react-testing-library/examples"},next:{title:"Example",permalink:"/docs/react-native-testing-library/example-intro"}},m={},d=[{value:"Quickstart",id:"quickstart",level:2},{value:"The problem",id:"the-problem",level:2},{value:"This solution",id:"this-solution",level:2}],b={toc:d};function f(e){var t=e.components,r=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"React Native Testing Library is a testing library for ",(0,i.kt)("strong",{parentName:"p"},"React Native")," inspired\nby ",(0,i.kt)("inlineCode",{parentName:"p"},"React Testing Library"),". Because React Native does not run in a browser\nenvironment, the core queries are implemented independently, unlike other\nwrappers that use ",(0,i.kt)("inlineCode",{parentName:"p"},"DOM Testing Library")," as the base. You'll find much more\ninformation about the library, including examples, on the project sites:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://callstack.github.io/react-native-testing-library/"},"Docs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/callstack/react-native-testing-library"},"Project repo"))),(0,i.kt)("p",null,"The project is maintained by\n",(0,i.kt)("a",{parentName:"p",href:"https://callstack.com/open-source/?utm_source=testing-library.com&utm_medium=referral&utm_campaign=react-native-testing-library"},"Callstack"),"\nwhich is one of the React Native\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebook/react-native/blob/d48f7ba748a905818e8c64fe70fe5b24aa098b05/ECOSYSTEM.md#partners"},"Partners"),",\nactive throughout the React Native Community."),(0,i.kt)("h2",{id:"quickstart"},"Quickstart"),(0,i.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @testing-library/react-native\n"))),(0,i.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev @testing-library/react-native\n")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/callstack/react-native-testing-library"},"React Native Testing Library on GitHub"))),(0,i.kt)("h2",{id:"the-problem"},"The problem"),(0,i.kt)("p",null,"You want to write maintainable tests for your React Native components. As a part\nof this goal, you want your tests to avoid including implementation details of\nyour components and rather focus on making your tests give you the confidence\nfor which they are intended. As part of this, you want your testbase to be\nmaintainable in the long run so refactors of your components (changes to\nimplementation but not functionality) don't break your tests and slow you and\nyour team down."),(0,i.kt)("h2",{id:"this-solution"},"This solution"),(0,i.kt)("p",null,"The React Native Testing Library (RNTL) is a lightweight solution for testing\nReact Native components. It provides light utility functions on top of\n",(0,i.kt)("inlineCode",{parentName:"p"},"react-test-renderer"),", in a way that encourages better testing practices. Its\nprimary guiding principle is:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The more your tests resemble the way your software is used, the more\nconfidence they can give you.")),(0,i.kt)("p",null,"This Project is tested to work with Jest, but it should work with other test\nrunners as well."))}f.isMDXComponent=!0}}]);