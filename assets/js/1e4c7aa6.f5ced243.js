"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[3340],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||s;return r?n.createElement(h,a(a({ref:t},c),{},{components:r})):n.createElement(h,a({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1189:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var n=r(7462),o=r(3366),s=(r(7294),r(3905)),a=["components"],i={id:"setup",title:"Setup",sidebar_label:"Setup"},l=void 0,p={unversionedId:"marko-testing-library/setup",id:"marko-testing-library/setup",title:"Setup",description:"Marko Testing Library is not dependent on any test runner. However, it is",source:"@site/docs/marko-testing-library/setup.mdx",sourceDirName:"marko-testing-library",slug:"/marko-testing-library/setup",permalink:"/docs/marko-testing-library/setup",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/marko-testing-library/setup.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750827853,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"setup",title:"Setup",sidebar_label:"Setup"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/marko-testing-library/intro"},next:{title:"API",permalink:"/docs/marko-testing-library/api"}},c={},u=[{value:"Jest",id:"jest",level:3},{value:"Mocha",id:"mocha",level:3}],m={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Marko Testing Library")," is not dependent on any test runner. However, it is\ndependent on the test environment. This package works for testing both server\nside, and client-side Marko templates and provides a slightly different\nimplementation optimized for each. This is done using a\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/defunctzombie/package-browser-field-spec"},"browser shim"),",\njust like in Marko."),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/defunctzombie/package-browser-field-spec"},"browser shim"),"\nis picked up by many tools, including all bundlers and some test runners."),(0,s.kt)("p",null,"Below is some example configurations to test both server and browser components\nwith some popular test runners."),(0,s.kt)("h3",{id:"jest"},(0,s.kt)("a",{parentName:"h3",href:"http://jestjs.io"},"Jest")),(0,s.kt)("p",null,"For Jest to understand Marko templates you must first\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/marko-js/jest#installation"},"install the @marko/jest preset"),".\nThis allows your Marko templates to be imported into your tests."),(0,s.kt)("p",null,"In Jest there is a\n",(0,s.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/en/configuration#browser-boolean"},"browser option")," which\nwill tell Jest to resolve the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/defunctzombie/package-browser-field-spec"},"browser shim"),"\nversion of all modules as mentioned above."),(0,s.kt)("p",null,"To test components rendered on the client-side, be sure to enable both the\n",(0,s.kt)("inlineCode",{parentName:"p"},"browser")," option and the preset and you are good to go!"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="jest.config.js"',title:'"jest.config.js"'},"module.exports = {\n  preset: '@marko/jest/preset/browser',\n}\n")),(0,s.kt)("p",null,"For testing components rendered on the server-side we can instead use\n",(0,s.kt)("inlineCode",{parentName:"p"},"@marko/jest/preset/node")," as our jest preset."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="jest.config.js"',title:'"jest.config.js"'},"module.exports = {\n  preset: '@marko/jest/preset/node',\n}\n")),(0,s.kt)("p",null,"A Jest configuration can also have multiple\n",(0,s.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/en/configuration#projects-array-string-projectconfig"},"projects"),"\nwhich we can use to create a combined configuration for server-side tests, and\nclient-side tests, like so:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="jest.config.js"',title:'"jest.config.js"'},"module.exports = {\n  projects: [\n    {\n      displayName: 'server',\n      preset: '@marko/jest/preset/node',\n      testRegex: '/__tests__/[^.]+\\\\.server\\\\.js$',\n    },\n    {\n      displayName: 'browser',\n      preset: '@marko/jest/preset/browser',\n      testRegex: '/__tests__/[^.]+\\\\.browser\\\\.js$',\n    },\n  ],\n}\n")),(0,s.kt)("h3",{id:"mocha"},(0,s.kt)("a",{parentName:"h3",href:"https://mochajs.org"},"Mocha")),(0,s.kt)("p",null,"Mocha also works great for testing Marko components. Mocha, however, has no\nunderstanding of\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/defunctzombie/package-browser-field-spec"},"browser shims"),"\nwhich means out of the box it can only work with server-side Marko components."),(0,s.kt)("p",null,"To run server-side Marko tests with ",(0,s.kt)("inlineCode",{parentName:"p"},"mocha")," you can simply run the following\ncommand:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-console"},"mocha --require marko/node-require\n")),(0,s.kt)("p",null,"This enables the\n",(0,s.kt)("a",{parentName:"p",href:"https://markojs.com/docs/installing/#require-marko-views"},"Marko require hook"),"\nand allows you to require server-side Marko templates directly in your tests."),(0,s.kt)("p",null,"For client-side testing of your components with Mocha often you will use a\nbundler to build your tests (this will properly resolve the browser shims\nmentioned above) and then you can load these tests in some kind of browser\ncontext."))}d.isMDXComponent=!0}}]);