"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[6385],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,s(s({ref:t},p),{},{components:n})):r.createElement(g,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9484:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={id:"example",title:"Example",sidebar_label:"Example"},l=void 0,c={unversionedId:"preact-testing-library/example",id:"preact-testing-library/example",title:"Example",description:"Preact Testing Library works with both Preact Hooks and Classes. Your tests",source:"@site/docs/preact-testing-library/example.mdx",sourceDirName:"preact-testing-library",slug:"/preact-testing-library/example",permalink:"/docs/preact-testing-library/example",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/preact-testing-library/example.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750827853,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"example",title:"Example",sidebar_label:"Example"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/preact-testing-library/intro"},next:{title:"API",permalink:"/docs/preact-testing-library/api"}},p={},d=[{value:"Component",id:"component",level:2},{value:"Test",id:"test",level:2}],u={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Preact Testing Library works with both Preact Hooks and Classes. Your tests\nwill be the same however you write your components.")),(0,o.kt)("h2",{id:"component"},"Component"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'function HiddenMessage({children}) {\n  const [showMessage, setShowMessage] = useState(false)\n\n  return (\n    <div>\n      <label htmlFor="toggle">Show Message</label>\n      <input\n        id="toggle"\n        type="checkbox"\n        onChange={e => setShowMessage(e.target.checked)}\n        checked={showMessage}\n      />\n      {showMessage ? children : null}\n    </div>\n  )\n}\n')),(0,o.kt)("h2",{id:"test"},"Test"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"// NOTE: jest-dom adds handy assertions to Jest and it is recommended, but not required.\nimport '@testing-library/jest-dom'\n\nimport {h} from 'preact'\nimport {render, fireEvent} from '@testing-library/preact'\n\nimport HiddenMessage from '../hidden-message'\n\ntest('shows the children when the checkbox is checked', () => {\n  const testMessage = 'Test Message'\n\n  const {queryByText, getByLabelText, getByText} = render(\n    <HiddenMessage>{testMessage}</HiddenMessage>,\n  )\n\n  // query* functions will return the element or null if it cannot be found.\n  // get* functions will return the element or throw an error if it cannot be found.\n  expect(queryByText(testMessage)).toBeNull()\n\n  // The queries can accept a regex to make your selectors more resilient to content tweaks and changes.\n  fireEvent.click(getByLabelText(/show/i))\n\n  // .toBeInTheDocument() is an assertion that comes from jest-dom.\n  // Otherwise you could use .toBeDefined().\n  expect(getByText(testMessage)).toBeInTheDocument()\n})\n")))}m.isMDXComponent=!0}}]);