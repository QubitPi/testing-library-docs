"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[3414],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,v=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(v,o(o({ref:t},u),{},{components:n})):a.createElement(v,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const i="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),i=n(6010),o=n(2389),l=n(7392),s=n(7094),c=n(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n,o=e.lazy,d=e.block,m=e.defaultValue,v=e.values,f=e.groupId,h=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=v?v:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,l.l)(b,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:k[0].props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),E=N.tabGroupChoices,w=N.setTabGroupChoices,C=(0,r.useState)(y),T=C[0],j=C[1],O=[],x=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var P=E[f];null!=P&&P!==T&&b.some((function(e){return e.value===P}))&&j(P)}var M=function(e){var t=e.currentTarget,n=O.indexOf(t),a=b[n].value;a!==T&&(x(t),j(a),null!=f&&w(f,String(a)))},D=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=O.indexOf(e.currentTarget)+1;n=null!=(a=O[r])?a:O[0];break;case"ArrowLeft":var i,o=O.indexOf(e.currentTarget)-1;n=null!=(i=O[o])?i:O[O.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},h)},b.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return O.push(e)},onKeyDown:D,onFocus:M,onClick:M},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(k.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function m(e){var t=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},3717:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>f,frontMatter:()=>c,metadata:()=>p,toc:()=>m});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=n(5488),l=n(5162),s=["components"],c={id:"api-events",title:"Firing Events"},u=void 0,p={unversionedId:"dom-testing-library/api-events",id:"dom-testing-library/api-events",title:"Firing Events",description:"Note",source:"@site/docs/dom-testing-library/api-events.mdx",sourceDirName:"dom-testing-library",slug:"/dom-testing-library/api-events",permalink:"/docs/dom-testing-library/api-events",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/dom-testing-library/api-events.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750827853,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"api-events",title:"Firing Events"},sidebar:"docs",previous:{title:"ByTestId",permalink:"/docs/queries/bytestid"},next:{title:"Async Methods",permalink:"/docs/dom-testing-library/api-async"}},d={},m=[{value:"<code>fireEvent</code>",id:"fireevent",level:2},{value:"<code>fireEvent[eventName]</code>",id:"fireeventeventname",level:2},{value:"<code>createEvent[eventName]</code>",id:"createeventeventname",level:2},{value:"Using Jest Function Mocks",id:"using-jest-function-mocks",level:2}],v={toc:m};function f(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note")),(0,i.kt)("p",{parentName:"blockquote"},"Most projects have a few use cases for ",(0,i.kt)("inlineCode",{parentName:"p"},"fireEvent"),", but the majority of the\ntime you should probably use\n",(0,i.kt)("a",{parentName:"p",href:"/docs/user-event/intro"},(0,i.kt)("inlineCode",{parentName:"a"},"@testing-library/user-event")),".")),(0,i.kt)("h2",{id:"fireevent"},(0,i.kt)("inlineCode",{parentName:"h2"},"fireEvent")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"fireEvent(node: HTMLElement, event: Event)\n")),(0,i.kt)("p",null,"Fire DOM events."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// <button>Submit</button>\nfireEvent(\n  getByText(container, 'Submit'),\n  new MouseEvent('click', {\n    bubbles: true,\n    cancelable: true,\n  }),\n)\n")),(0,i.kt)("h2",{id:"fireeventeventname"},(0,i.kt)("inlineCode",{parentName:"h2"},"fireEvent[eventName]")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"fireEvent[eventName](node: HTMLElement, eventProperties: Object)\n")),(0,i.kt)("p",null,"Convenience methods for firing DOM events. Check out\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/dom-testing-library/blob/master/src/event-map.js"},"src/event-map.js"),"\nfor a full list as well as default ",(0,i.kt)("inlineCode",{parentName:"p"},"eventProperties"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"target"),": When an event is dispatched on an element, the event has the\nsubjected element on a property called ",(0,i.kt)("inlineCode",{parentName:"p"},"target"),". As a convenience, if you\nprovide a ",(0,i.kt)("inlineCode",{parentName:"p"},"target")," property in the ",(0,i.kt)("inlineCode",{parentName:"p"},"eventProperties")," (second argument), then\nthose properties will be assigned to the node which is receiving the event."),(0,i.kt)("p",null,"This is particularly useful for a change event:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"fireEvent.change(getByLabelText(/username/i), {target: {value: 'a'}})\n\n// note: attempting to manually set the files property of an HTMLInputElement\n// results in an error as the files property is read-only.\n// this feature works around that by using Object.defineProperty.\nfireEvent.change(getByLabelText(/picture/i), {\n  target: {\n    files: [new File(['(\u2310\u25a1_\u25a1)'], 'chucknorris.png', {type: 'image/png'})],\n  },\n})\n\n// Note: The 'value' attribute must use ISO 8601 format when firing a\n// change event on an input of type \"date\". Otherwise the element will not\n// reflect the changed value.\n\n// Invalid:\nfireEvent.change(input, {target: {value: '24/05/2020'}})\n\n// Valid:\nfireEvent.change(input, {target: {value: '2020-05-24'}})\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"dataTransfer"),": Drag events have a ",(0,i.kt)("inlineCode",{parentName:"p"},"dataTransfer")," property that contains data\ntransferred during the operation. As a convenience, if you provide a\n",(0,i.kt)("inlineCode",{parentName:"p"},"dataTransfer")," property in the ",(0,i.kt)("inlineCode",{parentName:"p"},"eventProperties")," (second argument), then those\nproperties will be added to the event."),(0,i.kt)("p",null,"This should predominantly be used for testing drag and drop interactions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"fireEvent.drop(getByLabelText(/drop files here/i), {\n  dataTransfer: {\n    files: [new File(['(\u2310\u25a1_\u25a1)'], 'chucknorris.png', {type: 'image/png'})],\n  },\n})\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Keyboard events"),": There are three event types related to keyboard input -\n",(0,i.kt)("inlineCode",{parentName:"p"},"keyPress"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"keyDown"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"keyUp"),". When firing these you need to reference an\nelement in the DOM and the key you want to fire."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"fireEvent.keyDown(domNode, {key: 'Enter', code: 'Enter', charCode: 13})\n\nfireEvent.keyDown(domNode, {key: 'A', code: 'KeyA'})\n")),(0,i.kt)("p",null,"You can find out which key code to use at\n",(0,i.kt)("a",{parentName:"p",href:"https://www.toptal.com/developers/keycode"},"https://www.toptal.com/developers/keycode"),"."),(0,i.kt)("h2",{id:"createeventeventname"},(0,i.kt)("inlineCode",{parentName:"h2"},"createEvent[eventName]")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"createEvent[eventName](node: HTMLElement, eventProperties: Object)\n")),(0,i.kt)("p",null,"Convenience methods for creating DOM events that can then be fired by\n",(0,i.kt)("inlineCode",{parentName:"p"},"fireEvent"),", allowing you to have a reference to the event created: this might\nbe useful if you need to access event properties that cannot be initiated\nprogrammatically (such as ",(0,i.kt)("inlineCode",{parentName:"p"},"timeStamp"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const myEvent = createEvent.click(node, {button: 2})\nfireEvent(node, myEvent)\n// myEvent.timeStamp can be accessed just like any other properties from myEvent\n// note: The access to the events created by `createEvent` is based on the native event API,\n// Therefore, native properties of HTMLEvent object (e.g. `timeStamp`, `cancelable`, `type`) should be set using Object.defineProperty\n// For more info see: https://developer.mozilla.org/en-US/docs/Web/API/Event\n")),(0,i.kt)("p",null,"You can also create generic events:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// simulate the 'input' event on a file input\nfireEvent(\n  input,\n  createEvent('input', input, {\n    target: {files: inputFiles},\n    ...init,\n  }),\n)\n")),(0,i.kt)("h2",{id:"using-jest-function-mocks"},"Using Jest Function Mocks"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/en/mock-functions"},"Jest's Mock functions")," can be used to\ntest that a component will call its bound callback in response to a particular\nevent."),(0,i.kt)(o.Z,{defaultValue:"react",values:[{label:"React",value:"react"},{label:"Angular",value:"angular"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"react",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import {render, screen, fireEvent} from '@testing-library/react'\n\nconst Button = ({onClick, children}) => (\n  <button onClick={onClick}>{children}</button>\n)\n\ntest('calls onClick prop when clicked', () => {\n  const handleClick = jest.fn()\n  render(<Button onClick={handleClick}>Click Me</Button>)\n  fireEvent.click(screen.getByText(/click me/i))\n  expect(handleClick).toHaveBeenCalledTimes(1)\n})\n"))),(0,i.kt)(l.Z,{value:"angular",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import {render, screen, fireEvent} from '@testing-library/angular'\n\n@Component({\n  template: `<button (click)=\"handleClick.emit()\">Click Me</button>`,\n})\nclass ButtonComponent {\n  @Output() handleClick = new EventEmitter<void>()\n}\n\ntest('calls onClick prop when clicked', async () => {\n  const handleClick = jest.fn()\n  await render(ButtonComponent, {\n    componentOutputs: {\n      handleClick: {emit: handleClick} as any,\n    },\n  })\n  await fireEvent.click(screen.getByText(/click me/i))\n  expect(handleClick).toHaveBeenCalledTimes(1)\n})\n")))))}f.isMDXComponent=!0}}]);