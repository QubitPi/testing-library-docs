"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[7273],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),d=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},s=function(e){var n=d(e.components);return a.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(t),m=r,k=u["".concat(i,".").concat(m)]||u[m]||c[m]||o;return t?a.createElement(k,p(p({ref:n},s),{},{components:t})):a.createElement(k,p({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,p=new Array(o);p[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,p[1]=l;for(var d=2;d<o;d++)p[d]=t[d];return a.createElement.apply(null,p)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},491:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),p=["components"],l={id:"api",title:"API"},i=void 0,d={unversionedId:"angular-testing-library/api",id:"angular-testing-library/api",title:"API",description:"Angular Testing Library re-exports everything from DOM Testing Library as",source:"@site/docs/angular-testing-library/api.mdx",sourceDirName:"angular-testing-library",slug:"/angular-testing-library/api",permalink:"/docs/angular-testing-library/api",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/angular-testing-library/api.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"api",title:"API"},sidebar:"docs",previous:{title:"Example",permalink:"/docs/angular-testing-library/examples"},next:{title:"Version compatibility",permalink:"/docs/angular-testing-library/version-compatibility"}},s={},c=[{value:"<code>render</code>",id:"render",level:2},{value:"<code>Type</code>",id:"type",level:2},{value:"<code>template</code>",id:"template",level:2},{value:"Component RenderOptions",id:"component-renderoptions",level:2},{value:"<code>inputs</code>",id:"inputs",level:3},{value:"<code>on</code>",id:"on",level:3},{value:"<code>declarations</code>",id:"declarations",level:3},{value:"<code>deferBlockBehavior</code>",id:"deferblockbehavior",level:3},{value:"<code>deferBlockStates</code>",id:"deferblockstates",level:3},{value:"<code>componentProviders</code>",id:"componentproviders",level:3},{value:"<code>componentImports</code>",id:"componentimports",level:3},{value:"<code>childComponentOverrides</code>",id:"childcomponentoverrides",level:3},{value:"<code>detectChangesOnRender</code>",id:"detectchangesonrender",level:3},{value:"<code>autoDetectChanges</code>",id:"autodetectchanges",level:3},{value:"<code>excludeComponentDeclaration</code>",id:"excludecomponentdeclaration",level:3},{value:"<code>imports</code>",id:"imports",level:3},{value:"<code>providers</code>",id:"providers",level:3},{value:"<code>queries</code>",id:"queries",level:3},{value:"<code>routes</code>",id:"routes",level:3},{value:"<code>schemas</code>",id:"schemas",level:3},{value:"<code>removeAngularAttributes</code>",id:"removeangularattributes",level:3},{value:"<del><code>componentInputs</code></del> (deprecated)",id:"componentinputs-deprecated",level:3},{value:"<del><code>componentOutputs</code></del> (deprecated)",id:"componentoutputs-deprecated",level:3},{value:"<del><code>componentProperties</code></del> (deprecated)",id:"componentproperties-deprecated",level:3},{value:"<code>RenderResult</code>",id:"renderresult",level:2},{value:"<code>container</code>",id:"container",level:3},{value:"<code>debug</code>",id:"debug",level:3},{value:"<code>rerender</code>",id:"rerender",level:3},{value:"<code>detectChanges</code>",id:"detectchanges",level:3},{value:"<code>debugElement</code>",id:"debugelement",level:3},{value:"<code>fixture</code>",id:"fixture",level:3},{value:"<code>navigate</code>",id:"navigate",level:3},{value:"<code>...queries</code>",id:"queries-1",level:3},{value:"<code>renderDeferBlock</code>",id:"renderdeferblock",level:3}],u={toc:c};function m(e){var n=e.components,t=(0,r.Z)(e,p);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Angular Testing Library")," re-exports everything from ",(0,o.kt)("inlineCode",{parentName:"p"},"DOM Testing Library")," as\nwell as the ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," method."),(0,o.kt)("p",null,"The following re-exports are patched to make them easier to use with Angular:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The events on ",(0,o.kt)("inlineCode",{parentName:"li"},"fireEvent")," automatically invoke a change detection cycle after\nthe event has been fired"),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"findBy")," queries automatically invoke a change detection cycle before the\nquery is invoked function"),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"waitFor")," functions automatically invoke a change detection cycle before\ninvoking the callback function")),(0,o.kt)("h2",{id:"render"},(0,o.kt)("inlineCode",{parentName:"h2"},"render")),(0,o.kt)("p",null,"With Angular Testing Library, the component can be rendered in two ways, via the\ncomponent's type or with a template."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"By default, ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," also imports the ",(0,o.kt)("inlineCode",{parentName:"p"},"NoopAnimationsModule"),".")),(0,o.kt)("h2",{id:"type"},(0,o.kt)("inlineCode",{parentName:"h2"},"Type")),(0,o.kt)("p",null,"To render a component, you need to pass component's type to the ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," method.\nFor components that don't use other parts of your application (for example\ndesign modules or services), rendering a component can be as simple as the\nfollowing example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent)\n")),(0,o.kt)("h2",{id:"template"},(0,o.kt)("inlineCode",{parentName:"h2"},"template")),(0,o.kt)("p",null,"Instead of passing the component's type as first argument, you can also provide\na template. This practice is required to render directives but can also be\napplied to components, it might even be more useful. The directive's (or\ncomponent's) type must then be added to the ",(0,o.kt)("inlineCode",{parentName:"p"},"declarations"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example with directive"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render('<div appSpoiler></div>', {\n  declarations: [SpoilerDirective],\n})\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example with component"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'await render(\n  \'<app-component [value]="47" [otherValue]="anotherValue" (sendValue)="sendValue($event)"></app-component>\',\n  {\n    declarations: [AppComponent],\n    componentProperties: {\n      anotherValue: \'valueOfAnotherProperty\',\n      sendValue: jest.fn(),\n    },\n  },\n)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function render<ComponentType>(\n  component: Type<ComponentType>,\n  renderOptions?: RenderComponentOptions<ComponentType>,\n): Promise<RenderResult<ComponentType, ComponentType>>\nexport async function render<WrapperType = WrapperComponent>(\n  template: string,\n  renderOptions?: RenderTemplateOptions<WrapperType>,\n): Promise<RenderResult<WrapperType>>\n")),(0,o.kt)("h2",{id:"component-renderoptions"},"Component RenderOptions"),(0,o.kt)("h3",{id:"inputs"},(0,o.kt)("inlineCode",{parentName:"h3"},"inputs")),(0,o.kt)("p",null,"An object to set ",(0,o.kt)("inlineCode",{parentName:"p"},"@Input")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"input()")," properties of the component."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  inputs: {\n    counterValue: 10,\n    // explicitly define aliases using `aliasedInput`\n    ...aliasedInput('someAlias', 'someValue'),\n  },\n})\n")),(0,o.kt)("h3",{id:"on"},(0,o.kt)("inlineCode",{parentName:"h3"},"on")),(0,o.kt)("p",null,"An object with callbacks to subscribe to ",(0,o.kt)("inlineCode",{parentName:"p"},"EventEmitters")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Observables")," of\nthe component."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// using a manual callback\nconst sendValue = (value) => { ... }\n// using a (jest) spy\nconst sendValueSpy = jest.fn()\n\nawait render(AppComponent, {\n  on: {\n    send: (value) => sendValue(value),\n    send: sendValueSpy\n  }\n})\n")),(0,o.kt)("h3",{id:"declarations"},(0,o.kt)("inlineCode",{parentName:"h3"},"declarations")),(0,o.kt)("p",null,"A collection of components, directives and pipes needed to render the component.\nFor example, nested components of the component."),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/NgModule#declarations"},"Angular docs"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"[]")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  declarations: [CustomerDetailComponent, ButtonComponent],\n})\n")),(0,o.kt)("h3",{id:"deferblockbehavior"},(0,o.kt)("inlineCode",{parentName:"h3"},"deferBlockBehavior")),(0,o.kt)("p",null,"Set the defer blocks behavior."),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/testing/DeferBlockBehavior"},"Angular docs")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined")," (uses ",(0,o.kt)("inlineCode",{parentName:"p"},"DeferBlockBehavior.Manual"),", which is different\nfrom the Angular default of ",(0,o.kt)("inlineCode",{parentName:"p"},"DeferBlockBehavior.Playthrough"),")"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  deferBlockBehavior: DeferBlockBehavior.Playthrough,\n})\n")),(0,o.kt)("h3",{id:"deferblockstates"},(0,o.kt)("inlineCode",{parentName:"h3"},"deferBlockStates")),(0,o.kt)("p",null,"Set the initial state of a deferrable blocks in a component."),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/testing/DeferBlockState"},"Angular docs")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined")," (uses the Angular default, which is\n",(0,o.kt)("inlineCode",{parentName:"p"},"DeferBlockState.Placeholder"),")"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(FixtureComponent, {\n  deferBlockStates: DeferBlockState.Loading,\n})\n")),(0,o.kt)("h3",{id:"componentproviders"},(0,o.kt)("inlineCode",{parentName:"h3"},"componentProviders")),(0,o.kt)("p",null,"A collection of providers needed to render the component via Dependency\nInjection."),(0,o.kt)("p",null,"These will be provided at the component level. To inject dependencies at the\nmodule level, use ",(0,o.kt)("a",{parentName:"p",href:"#providers"},(0,o.kt)("inlineCode",{parentName:"a"},"providers")),"."),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/Directive#providers"},"Angular docs"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"[]")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  componentProviders: [AppComponentService],\n})\n")),(0,o.kt)("h3",{id:"componentimports"},(0,o.kt)("inlineCode",{parentName:"h3"},"componentImports")),(0,o.kt)("p",null,"A collection of imports to override a standalone component's imports with."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  componentImports: [MockChildComponent],\n})\n")),(0,o.kt)("h3",{id:"childcomponentoverrides"},(0,o.kt)("inlineCode",{parentName:"h3"},"childComponentOverrides")),(0,o.kt)("p",null,"Collection of child component specified providers to override with."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  childComponentOverrides: [\n    {\n      component: ChildOfAppComponent,\n      providers: [{provide: ChildService, useValue: {hello: 'world'}}],\n    },\n  ],\n})\n")),(0,o.kt)("h3",{id:"detectchangesonrender"},(0,o.kt)("inlineCode",{parentName:"h3"},"detectChangesOnRender")),(0,o.kt)("p",null,"Invokes ",(0,o.kt)("inlineCode",{parentName:"p"},"detectChanges")," after the component is rendered."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"true")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {detectChangesOnRender: false})\n")),(0,o.kt)("h3",{id:"autodetectchanges"},(0,o.kt)("inlineCode",{parentName:"h3"},"autoDetectChanges")),(0,o.kt)("p",null,'Automatically detect changes as a "real" running component would do. For\nexample, runs a change detection cycle when an event has occured.'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"true")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  autoDetectChanges: false,\n})\n")),(0,o.kt)("h3",{id:"excludecomponentdeclaration"},(0,o.kt)("inlineCode",{parentName:"h3"},"excludeComponentDeclaration")),(0,o.kt)("p",null,"Exclude the component to be automatically be added as a declaration. This is\nneeded when the component is declared in an imported module, for example with\nSCAMs."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"false")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  imports: [AppModule], // a module that includes AppComponent\n  excludeComponentDeclaration: true,\n})\n")),(0,o.kt)("h3",{id:"imports"},(0,o.kt)("inlineCode",{parentName:"h3"},"imports")),(0,o.kt)("p",null,"A collection of imports needed to render the component, for example, shared\nmodules. Adds ",(0,o.kt)("inlineCode",{parentName:"p"},"NoopAnimationsModule")," by default if ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserAnimationsModule"),"\nisn't added to the collection"),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/NgModule#imports"},"Angular docs"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"[NoopAnimationsModule]")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  imports: [AppSharedModule, MaterialModule],\n})\n")),(0,o.kt)("h3",{id:"providers"},(0,o.kt)("inlineCode",{parentName:"h3"},"providers")),(0,o.kt)("p",null,"A collection of providers needed to render the component via Dependency\nInjection."),(0,o.kt)("p",null,"These will be provided at the module level. To inject dependencies at the\ncomponent level, use ",(0,o.kt)("a",{parentName:"p",href:"#componentProviders"},(0,o.kt)("inlineCode",{parentName:"a"},"componentProviders")),"."),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/NgModule#providers"},"Angular docs"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"[]")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  providers: [\n    CustomersService,\n    {\n      provide: MAX_CUSTOMERS_TOKEN,\n      useValue: 10,\n    },\n  ],\n})\n")),(0,o.kt)("h3",{id:"queries"},(0,o.kt)("inlineCode",{parentName:"h3"},"queries")),(0,o.kt)("p",null,"Queries to bind. Overrides the default set from DOM Testing Library unless\nmerged."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  queries: {...queries, ...customQueries},\n})\n")),(0,o.kt)("h3",{id:"routes"},(0,o.kt)("inlineCode",{parentName:"h3"},"routes")),(0,o.kt)("p",null,"The route configuration to set up the router service via\n",(0,o.kt)("inlineCode",{parentName:"p"},"RouterTestingModule.withRoutes"),". For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/router/Routes"},"Angular Routes docs"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"[]")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  declarations: [ChildComponent],\n  routes: [\n    {\n      path: '',\n      children: [\n        {\n          path: 'child/:id',\n          component: ChildComponent,\n        },\n      ],\n    },\n  ],\n})\n")),(0,o.kt)("h3",{id:"schemas"},(0,o.kt)("inlineCode",{parentName:"h3"},"schemas")),(0,o.kt)("p",null,"A collection of schemas needed to render the component. Allowed values are\n",(0,o.kt)("inlineCode",{parentName:"p"},"NO_ERRORS_SCHEMA")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"CUSTOM_ELEMENTS_SCHEMA"),"."),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/NgModule#schemas"},"Angular docs"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"[]")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  schemas: [NO_ERRORS_SCHEMA],\n})\n")),(0,o.kt)("h3",{id:"removeangularattributes"},(0,o.kt)("inlineCode",{parentName:"h3"},"removeAngularAttributes")),(0,o.kt)("p",null,"Removes the Angular attributes (ng-version, and root-id) from the fixture."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"false")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  removeAngularAttributes: true,\n})\n")),(0,o.kt)("h3",{id:"componentinputs-deprecated"},(0,o.kt)("del",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"del"},"componentInputs"))," (deprecated)"),(0,o.kt)("p",null,"An object to set ",(0,o.kt)("inlineCode",{parentName:"p"},"@Input")," properties of the component. Uses ",(0,o.kt)("inlineCode",{parentName:"p"},"setInput")," to set\nthe input property. Throws if the component property is not annotated with the\n",(0,o.kt)("inlineCode",{parentName:"p"},"@Input")," attribute."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  componentInputs: {\n    counterValue: 10,\n  },\n})\n")),(0,o.kt)("h3",{id:"componentoutputs-deprecated"},(0,o.kt)("del",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"del"},"componentOutputs"))," (deprecated)"),(0,o.kt)("p",null,"An object to set ",(0,o.kt)("inlineCode",{parentName:"p"},"@Output")," properties of the component."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  componentOutputs: {\n    clicked: (value) => { ... }\n  }\n})\n")),(0,o.kt)("h3",{id:"componentproperties-deprecated"},(0,o.kt)("del",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"del"},"componentProperties"))," (deprecated)"),(0,o.kt)("p",null,"An object to set ",(0,o.kt)("inlineCode",{parentName:"p"},"@Input")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"@Output")," properties of the component. Doesn't\nhave a fine-grained control as ",(0,o.kt)("inlineCode",{parentName:"p"},"inputs")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"on"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"default")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await render(AppComponent, {\n  componentProperties: {\n    // an input\n    counterValue: 10,\n    // an output\n    send: (value) => { ... }\n    // a public property\n    name: 'Tim'\n  }\n})\n")),(0,o.kt)("h2",{id:"renderresult"},(0,o.kt)("inlineCode",{parentName:"h2"},"RenderResult")),(0,o.kt)("h3",{id:"container"},(0,o.kt)("inlineCode",{parentName:"h3"},"container")),(0,o.kt)("p",null,"The containing DOM node of your rendered Angular Component. This is a regular\nDOM node, so you can call ",(0,o.kt)("inlineCode",{parentName:"p"},"container.querySelector")," etc. to inspect the\nchildren."),(0,o.kt)("h3",{id:"debug"},(0,o.kt)("inlineCode",{parentName:"h3"},"debug")),(0,o.kt)("p",null,"Prints out the component's DOM with syntax highlighting. Accepts an optional\nparameter, to print out a specific DOM node."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const {debug} = await render(AppComponent)\n\ndebug()\n")),(0,o.kt)("h3",{id:"rerender"},(0,o.kt)("inlineCode",{parentName:"h3"},"rerender")),(0,o.kt)("p",null,"Changes the input properties of the existing component instance by following\nAngular component lifecycle events (i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"ngOnChanges")," is called). Input\nproperties that are not defined are cleared."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const {rerender} = await render(Counter, {\n  inputs: {count: 4, name: 'Sarah'},\n})\n\nexpect(screen.getByTestId('count-value').textContent).toBe('4')\nexpect(screen.getByTestId('name-value').textContent).toBe('Sarah')\n\nawait rerender({\n  inputs: {count: 7}\n})\n\n// count is updated to 7\nexpect(screen.getByTestId('count-value').textContent).toBe('7')\n// name is undefined because it's not provided in rerender\nexpect(screen.getByTestId('name-value').textContent).toBeUndefined()\n")),(0,o.kt)("p",null,"Using ",(0,o.kt)("inlineCode",{parentName:"p"},"partialUpdate"),", only the newly provided properties will be updated. Other\ninput properties that aren't provided won't be cleared."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const {rerender} = await render(Counter, {\n  inputs: {count: 4, name: 'Sarah'},\n})\n\nexpect(screen.getByTestId('count-value').textContent).toBe('4')\nexpect(screen.getByTestId('name-value').textContent).toBe('Sarah')\n\nawait rerender({inputs: {count: 7}, partialUpdate: true})\n\n// count is updated to 7\nexpect(screen.getByTestId('count-value').textContent).toBe('7')\n// name is still rendered as \"Sarah\" because of the partial update\nexpect(screen.getByTestId('name-value').textContent).toBe('Sarah')\n")),(0,o.kt)("h3",{id:"detectchanges"},(0,o.kt)("inlineCode",{parentName:"h3"},"detectChanges")),(0,o.kt)("p",null,"Trigger a change detection cycle for the component."),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/testing/ComponentFixture#detectChanges"},"Angular docs"),"."),(0,o.kt)("h3",{id:"debugelement"},(0,o.kt)("inlineCode",{parentName:"h3"},"debugElement")),(0,o.kt)("p",null,"The Angular ",(0,o.kt)("inlineCode",{parentName:"p"},"DebugElement")," of the component."),(0,o.kt)("p",null,"For more info see the ",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/DebugElement"},"Angular docs"),"."),(0,o.kt)("h3",{id:"fixture"},(0,o.kt)("inlineCode",{parentName:"h3"},"fixture")),(0,o.kt)("p",null,"The Angular ",(0,o.kt)("inlineCode",{parentName:"p"},"ComponentFixture")," of the component."),(0,o.kt)("p",null,"For more info see the\n",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/testing/ComponentFixture"},"Angular docs"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const {fixture} = await render(AppComponent)\n\n// componentInstance is typed as AppComponent\nconst componentInstance = fixture.componentInstance\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udea8 If you find yourself using ",(0,o.kt)("inlineCode",{parentName:"p"},"fixture")," to access the component's internal\nvalues you should reconsider! This probable means, you're testing\nimplementation details.")),(0,o.kt)("h3",{id:"navigate"},(0,o.kt)("inlineCode",{parentName:"h3"},"navigate")),(0,o.kt)("p",null,"Accepts a DOM element or a path as parameter. If an element is passed,\n",(0,o.kt)("inlineCode",{parentName:"p"},"navigate")," will navigate to the ",(0,o.kt)("inlineCode",{parentName:"p"},"href")," value of the element. If a path is\npassed, ",(0,o.kt)("inlineCode",{parentName:"p"},"navigate")," will navigate to the path."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const { navigate } = await render(AppComponent, {\n  routes: [...]\n})\n\nawait navigate(component.getByLabelText('To details'))\nawait navigate('details/3')\n")),(0,o.kt)("h3",{id:"queries-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"...queries")),(0,o.kt)("p",null,"The most important feature of ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," is that the queries from\n",(0,o.kt)("a",{parentName:"p",href:"/docs/dom-testing-library/intro"},"DOM Testing Library")," are automatically\nreturned with their first argument bound to the component under test."),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/queries/about"},"Queries")," for a complete list."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const {getByText, queryByLabelText} = await render(AppComponent)\n\nscreen.getByRole('heading', {\n  name: /api/i,\n})\nqueryByLabelText(/First name/i')\n")),(0,o.kt)("h3",{id:"renderdeferblock"},(0,o.kt)("inlineCode",{parentName:"h3"},"renderDeferBlock")),(0,o.kt)("p",null,"To test ",(0,o.kt)("a",{parentName:"p",href:"https://angular.dev/guide/defer#defer"},"Deferrable views"),", you can make\nuse of ",(0,o.kt)("inlineCode",{parentName:"p"},"renderDeferBlock"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"renderDeferBlock")," will set the desired defer state\nfor a specific deferrable block. The default value of a deferrable view is\n",(0,o.kt)("inlineCode",{parentName:"p"},"Placeholder"),", but you can also set the initial state while rendering the\ncomponent."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const {renderDeferBlock} = await render(FixtureComponent, {\n  deferBlockStates: DeferBlockState.Loading,\n})\n\nexpect(screen.getByText(/loading/i)).toBeInTheDocument()\n\nawait renderDeferBlock(DeferBlockState.Complete)\nexpect(screen.getByText(/completed/i)).toBeInTheDocument()\n")))}m.isMDXComponent=!0}}]);