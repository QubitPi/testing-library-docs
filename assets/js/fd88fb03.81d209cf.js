"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[4325],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,v=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return n?a.createElement(v,o(o({ref:t},c),{},{components:n})):a.createElement(v,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const i="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7462),r=n(7294),i=n(6010),o=n(2389),l=n(7392),s=n(7094),u=n(2466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){var t,n,o=e.lazy,m=e.block,d=e.defaultValue,v=e.values,b=e.groupId,f=e.className,y=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=v?v:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,l.l)(h,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(t=null!=d?d:null==(n=y.find((function(e){return e.props.default})))?void 0:n.props.value)?t:y[0].props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),j=N.tabGroupChoices,w=N.setTabGroupChoices,T=(0,r.useState)(k),O=T[0],x=T[1],E=[],I=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var C=j[b];null!=C&&C!==O&&h.some((function(e){return e.value===C}))&&x(C)}var D=function(e){var t=e.currentTarget,n=E.indexOf(t),a=h[n].value;a!==O&&(I(t),x(a),null!=b&&w(b,String(a)))},_=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=E.indexOf(e.currentTarget)+1;n=null!=(a=E[r])?a:E[0];break;case"ArrowLeft":var i,o=E.indexOf(e.currentTarget)-1;n=null!=(i=E[o])?i:E[E.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":m},f)},h.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return E.push(e)},onKeyDown:_,onFocus:D,onClick:D},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":O===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(y.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function d(e){var t=(0,o.Z)();return r.createElement(m,(0,a.Z)({key:String(t)},e))}},9028:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>b,frontMatter:()=>u,metadata:()=>p,toc:()=>d});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=n(5488),l=n(5162),s=["components"],u={id:"ecosystem-jest-native",title:"jest-native",sidebar_label:"jest-native"},c=void 0,p={unversionedId:"ecosystem-jest-native",id:"ecosystem-jest-native",title:"jest-native",description:"This package is deprecated and is no longer actively maintained.",source:"@site/docs/ecosystem-jest-native.mdx",sourceDirName:".",slug:"/ecosystem-jest-native",permalink:"/docs/ecosystem-jest-native",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/ecosystem-jest-native.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"ecosystem-jest-native",title:"jest-native",sidebar_label:"jest-native"},sidebar:"docs",previous:{title:"bs-jest-dom",permalink:"/docs/ecosystem-bs-jest-dom"},next:{title:"react-select-event",permalink:"/docs/ecosystem-react-select-event"}},m={},d=[],v={toc:d};function b(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"This package is deprecated and is no longer actively maintained.")),(0,i.kt)("p",{parentName:"admonition"},"We encourage you to migrate to React Native Testing Library, v12.4 or later,\nwhich includes modern\n",(0,i.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-testing-library/docs/api/jest-matchers"},"built-in Jest matchers"),"\nbased on the matchers for this repository. The migration process should be\nrelatively straightforward, we have a\n",(0,i.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-testing-library/docs/migration/jest-matchers"},"migration guide"),"\navailable.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/jest-native"},(0,i.kt)("inlineCode",{parentName:"a"},"Jest Native"))," is a companion\nlibrary for ",(0,i.kt)("inlineCode",{parentName:"p"},"React Native Testing Library")," that provides custom element matchers\nfor Jest."),(0,i.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @testing-library/jest-native\n"))),(0,i.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev @testing-library/jest-native\n")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'const {queryByTestId} = render(\n  <View>\n    <View testID="not-empty">\n      <Text testID="empty" />\n    </View>\n    <Text testID="visible">Visible Example</Text>\n  </View>,\n)\n\nexpect(queryByTestId(\'not-empty\')).not.toBeEmpty()\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: when using some of these matchers, you may need to make sure you use a\nquery function (like ",(0,i.kt)("inlineCode",{parentName:"p"},"queryByTestId"),") rather than a get function (like\n",(0,i.kt)("inlineCode",{parentName:"p"},"getByTestId"),"). Otherwise the ",(0,i.kt)("inlineCode",{parentName:"p"},"get*")," function could throw an error before your\nassertion.")),(0,i.kt)("p",null,"Check out\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/jest-native"},"Jest Native's documentation"),"\nfor a full list of available matchers."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/testing-library/jest-native"},"Jest Native on GitHub"))))}b.isMDXComponent=!0}}]);