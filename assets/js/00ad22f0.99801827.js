"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[2383],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"examples",title:"Example"},s=void 0,p={unversionedId:"angular-testing-library/examples",id:"angular-testing-library/examples",title:"Example",description:"Read about",source:"@site/docs/angular-testing-library/examples.mdx",sourceDirName:"angular-testing-library",slug:"/angular-testing-library/examples",permalink:"/docs/angular-testing-library/examples",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/angular-testing-library/examples.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"examples",title:"Example"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/angular-testing-library/intro"},next:{title:"API",permalink:"/docs/angular-testing-library/api"}},c={},u=[{value:"More examples",id:"more-examples",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Read about\n",(0,o.kt)("a",{parentName:"p",href:"https://timdeschryver.dev/blog/good-testing-practices-with-angular-testing-library"},"best practices"),",\nor follow the\n",(0,o.kt)("a",{parentName:"p",href:"https://timdeschryver.dev/blog/getting-the-most-value-out-of-your-angular-component-tests"},"guided example"))),(0,o.kt)("p",null,"Angular Testing Library can be used with standalone components and also with Angular components that uses Modules.\nThe example below shows how to test a standalone component, but the same principles apply to Angular components that uses Modules.\nIn fact, there should be no difference in how you test both types of components, only the setup might be different."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="counter.component.ts"',title:'"counter.component.ts"'},"@Component({\n  selector: 'app-counter',\n  template: `\n    <span>{{ hello() }}</span>\n    <button (click)=\"decrement()\">-</button>\n    <span>Current Count: {{ counter() }}</span>\n    <button (click)=\"increment()\">+</button>\n  `,\n})\nexport class CounterComponent {\n  counter = model(0);\n  hello = input('Hi', { alias: 'greeting' });\n\n  increment() {\n    this.counter.set(this.counter() + 1);\n  }\n\n  decrement() {\n    this.counter.set(this.counter() - 1);\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="counter.component.spec.ts"',title:'"counter.component.spec.ts"'},"import { render, screen, fireEvent, aliasedInput } from '@testing-library/angular';\nimport { CounterComponent } from './counter.component';\n\ndescribe('Counter', () => {\n  it('should render counter', async () => {\n    await render(CounterComponent, {\n      inputs: {\n        counter: 5,\n        // aliases need to be specified using aliasedInput\n        ...aliasedInput('greeting', 'Hello Alias!'),\n      },\n    });\n\n    expect(screen.getByText('Current Count: 5')).toBeVisible();\n    expect(screen.getByText('Hello Alias!')).toBeVisible();\n  });\n\n  it('should increment the counter on click', async () => {\n    await render(CounterComponent, { inputs: { counter: 5 } });\n\n    const incrementButton = screen.getByRole('button', { name: '+' });\n    fireEvent.click(incrementButton);\n\n    expect(screen.getByText('Current Count: 6')).toBeVisible();\n  });\n});\n")),(0,o.kt)("h2",{id:"more-examples"},"More examples"),(0,o.kt)("p",null,"More examples can be found in the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/testing-library/angular-testing-library/tree/master/apps/example-app/src/app/examples"},"GitHub project"),".\nThese examples include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"input")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"output")," properties"),(0,o.kt)("li",{parentName:"ul"},"Forms"),(0,o.kt)("li",{parentName:"ul"},"Integration injected services"),(0,o.kt)("li",{parentName:"ul"},"And\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/testing-library/angular-testing-library/tree/master/apps/example-app/src/app/examples"},"more"))),(0,o.kt)("p",null,"If you're looking for an example that isn't on the list, please feel free to\ncreate a\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/testing-library/angular-testing-library/issues/new"},"new issue"),"."))}d.isMDXComponent=!0}}]);