"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[7278],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),i=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=i(a),d=r,y=m["".concat(u,".").concat(d)]||m[d]||c[d]||l;return a?n.createElement(y,s(s({ref:t},p),{},{components:a})):n.createElement(y,s({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var i=2;i<l;i++)s[i]=a[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function s(e){var t=e.children,a=e.hidden,s=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,s),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(7462),r=a(7294),l=a(6010),s=a(2389),o=a(7392),u=a(7094),i=a(2466);const p="tabList__CuJ",c="tabItem_LNqP";function m(e){var t,a,s=e.lazy,m=e.block,d=e.defaultValue,y=e.values,v=e.groupId,g=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=y?y:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,o.l)(f,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===d?d:null!=(t=null!=d?d:null==(a=b.find((function(e){return e.props.default})))?void 0:a.props.value)?t:b[0].props.value;if(null!==N&&!f.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,u.U)(),T=h.tabGroupChoices,x=h.setTabGroupChoices,D=(0,r.useState)(N),w=D[0],O=D[1],V=[],A=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=v){var B=T[v];null!=B&&B!==w&&f.some((function(e){return e.value===B}))&&O(B)}var C=function(e){var t=e.currentTarget,a=V.indexOf(t),n=f[a].value;n!==w&&(A(t),O(n),null!=v&&x(v,String(n)))},E=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n,r=V.indexOf(e.currentTarget)+1;a=null!=(n=V[r])?n:V[0];break;case"ArrowLeft":var l,s=V.indexOf(e.currentTarget)-1;a=null!=(l=V[s])?l:V[V.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},g)},f.map((function(e){var t=e.value,a=e.label,s=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return V.push(e)},onKeyDown:E,onFocus:C,onClick:C},s,{className:(0,l.Z)("tabs__item",c,null==s?void 0:s.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),s?(0,r.cloneElement)(b.filter((function(e){return e.props.value===w}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function d(e){var t=(0,s.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},1294:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>v,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),s=a(5488),o=a(5162),u=["components"],i={id:"bydisplayvalue",title:"ByDisplayValue"},p=void 0,c={unversionedId:"queries/bydisplayvalue",id:"queries/bydisplayvalue",title:"ByDisplayValue",description:"getByDisplayValue, queryByDisplayValue, getAllByDisplayValue,",source:"@site/docs/queries/bydisplayvalue.mdx",sourceDirName:"queries",slug:"/queries/bydisplayvalue",permalink:"/docs/queries/bydisplayvalue",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/queries/bydisplayvalue.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750827853,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"bydisplayvalue",title:"ByDisplayValue"},sidebar:"docs",previous:{title:"ByText",permalink:"/docs/queries/bytext"},next:{title:"ByAltText",permalink:"/docs/queries/byalttext"}},m={},d=[{value:"API",id:"api",level:2},{value:"<code>input</code> tags",id:"input-tags",level:3},{value:"<code>textarea</code> tags",id:"textarea-tags",level:3},{value:"<code>select</code> tags",id:"select-tags",level:3},{value:"Options",id:"options",level:2}],y={toc:d};function v(e){var t=e.components,a=(0,r.Z)(e,u);return(0,l.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"getByDisplayValue, queryByDisplayValue, getAllByDisplayValue,\nqueryAllByDisplayValue, findByDisplayValue, findAllByDisplayValue")),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getByDisplayValue(\n  // If you're using `screen`, then skip the container argument:\n  container: HTMLElement,\n  value: TextMatch,\n  options?: {\n    exact?: boolean = true,\n    normalizer?: NormalizerFn,\n  }): HTMLElement\n")),(0,l.kt)("p",null,"Returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"input"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"textarea"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"select")," element that has the matching\ndisplay value."),(0,l.kt)("h3",{id:"input-tags"},(0,l.kt)("inlineCode",{parentName:"h3"},"input")," tags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<input type="text" id="lastName" />\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"document.getElementById('lastName').value = 'Norris'\n")),(0,l.kt)(s.Z,{defaultValue:"native",values:[{label:"Native",value:"native"},{label:"React",value:"react"},{label:"Angular",value:"angular"},{label:"Cypress",value:"cypress"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"native",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {screen} from '@testing-library/dom'\n\nconst lastNameInput = screen.getByDisplayValue('Norris')\n"))),(0,l.kt)(o.Z,{value:"react",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import {render, screen} from '@testing-library/react'\n\nrender(<MyComponent />)\nconst lastNameInput = screen.getByDisplayValue('Norris')\n"))),(0,l.kt)(o.Z,{value:"angular",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import {render, screen} from '@testing-library/angular'\n\nawait render(MyComponent)\nconst lastNameInput = screen.getByDisplayValue('Norris')\n"))),(0,l.kt)(o.Z,{value:"cypress",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"cy.findByDisplayValue('Norris').should('exist')\n")))),(0,l.kt)("h3",{id:"textarea-tags"},(0,l.kt)("inlineCode",{parentName:"h3"},"textarea")," tags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<textarea id="messageTextArea" />\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"document.getElementById('messageTextArea').value = 'Hello World'\n")),(0,l.kt)(s.Z,{defaultValue:"native",values:[{label:"Native",value:"native"},{label:"React",value:"react"},{label:"Angular",value:"angular"},{label:"Cypress",value:"cypress"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"native",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {screen} from '@testing-library/dom'\n\nconst messageTextArea = screen.getByDisplayValue('Hello World')\n"))),(0,l.kt)(o.Z,{value:"react",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import {render, screen} from '@testing-library/react'\n\nrender(<MyComponent />)\nconst messageTextArea = screen.getByDisplayValue('Hello World')\n"))),(0,l.kt)(o.Z,{value:"angular",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import {render, screen} from '@testing-library/angular'\n\nawait render(MyComponent)\nconst messageTextArea = screen.getByDisplayValue('Hello World')\n"))),(0,l.kt)(o.Z,{value:"cypress",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"cy.findByDisplayValue('Hello World').should('exist')\n")))),(0,l.kt)("h3",{id:"select-tags"},(0,l.kt)("inlineCode",{parentName:"h3"},"select")," tags"),(0,l.kt)("p",null,"In case of ",(0,l.kt)("inlineCode",{parentName:"p"},"select"),", this will search for a ",(0,l.kt)("inlineCode",{parentName:"p"},"<select>")," whose selected ",(0,l.kt)("inlineCode",{parentName:"p"},"<option>"),"\nmatches the given ",(0,l.kt)("a",{parentName:"p",href:"/docs/queries/about#textmatch"},(0,l.kt)("inlineCode",{parentName:"a"},"TextMatch")),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<select>\n  <option value="">State</option>\n  <option value="AL">Alabama</option>\n  <option selected value="AK">Alaska</option>\n  <option value="AZ">Arizona</option>\n</select>\n')),(0,l.kt)(s.Z,{defaultValue:"native",values:[{label:"Native",value:"native"},{label:"React",value:"react"},{label:"Angular",value:"angular"},{label:"Cypress",value:"cypress"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"native",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {screen} from '@testing-library/dom'\n\nconst selectElement = screen.getByDisplayValue('Alaska')\n"))),(0,l.kt)(o.Z,{value:"react",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import {render, screen} from '@testing-library/react'\n\nrender(<MyComponent />)\nconst selectElement = screen.getByDisplayValue('Alaska')\n"))),(0,l.kt)(o.Z,{value:"angular",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import {render, screen} from '@testing-library/angular'\n\nawait render(MyComponent)\nconst selectElement = screen.getByDisplayValue('Alaska')\n"))),(0,l.kt)(o.Z,{value:"cypress",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"cy.findByDisplayValue('Alaska').should('exist')\n")))),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/queries/about#textmatch"},"TextMatch")," options"))}v.isMDXComponent=!0}}]);