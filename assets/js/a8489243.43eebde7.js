"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[486],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1246:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={id:"example-react-transition-group",title:"React Transition Group"},c=void 0,l={unversionedId:"example-react-transition-group",id:"example-react-transition-group",title:"React Transition Group",description:"Mock",source:"@site/docs/example-react-transition-group.mdx",sourceDirName:".",slug:"/example-react-transition-group",permalink:"/docs/example-react-transition-group",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/example-react-transition-group.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750827853,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"example-react-transition-group",title:"React Transition Group"},sidebar:"recipes",previous:{title:"Reach Router",permalink:"/docs/example-reach-router"},next:{title:"Modals",permalink:"/docs/example-react-modal"}},p={},u=[{value:"Mock",id:"mock",level:2},{value:"Shallow",id:"shallow",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"mock"},"Mock"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, {useState} from 'react'\nimport {CSSTransition} from 'react-transition-group'\nimport {render, fireEvent} from '@testing-library/react'\n\nfunction Fade({children, ...props}) {\n  return (\n    <CSSTransition {...props} timeout={1000} classNames=\"fade\">\n      {children}\n    </CSSTransition>\n  )\n}\n\nfunction HiddenMessage({initialShow}) {\n  const [show, setShow] = useState(initialShow || false)\n  const toggle = () => setShow(prevState => !prevState)\n  return (\n    <div>\n      <button onClick={toggle}>Toggle</button>\n      <Fade in={show}>\n        <div>Hello world</div>\n      </Fade>\n    </div>\n  )\n}\n\njest.mock('react-transition-group', () => {\n  const FakeTransition = jest.fn(({children}) => children)\n  const FakeCSSTransition = jest.fn(props =>\n    props.in ? <FakeTransition>{props.children}</FakeTransition> : null,\n  )\n  return {CSSTransition: FakeCSSTransition, Transition: FakeTransition}\n})\n\ntest('you can mock things with jest.mock', () => {\n  const {getByText, queryByText} = render(<HiddenMessage initialShow={true} />)\n  expect(getByText('Hello world')).toBeTruthy() // we just care it exists\n  // hide the message\n  fireEvent.click(getByText('Toggle'))\n  // in the real world, the CSSTransition component would take some time\n  // before finishing the animation which would actually hide the message.\n  // So we've mocked it out for our tests to make it happen instantly\n  expect(queryByText('Hello World')).toBeNull() // we just care it doesn't exist\n})\n")),(0,i.kt)("h2",{id:"shallow"},"Shallow"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, {useState} from 'react'\nimport {CSSTransition} from 'react-transition-group'\nimport {render, fireEvent} from '@testing-library/react'\n\nfunction Fade({children, ...props}) {\n  return (\n    <CSSTransition {...props} timeout={1000} classNames=\"fade\">\n      {children}\n    </CSSTransition>\n  )\n}\n\nfunction HiddenMessage({initialShow}) {\n  const [show, setShow] = useState(initialShow || false)\n  const toggle = () => setShow(prevState => !prevState)\n  return (\n    <div>\n      <button onClick={toggle}>Toggle</button>\n      <Fade in={show}>\n        <div>Hello world</div>\n      </Fade>\n    </div>\n  )\n}\n\njest.mock('react-transition-group', () => {\n  const FakeCSSTransition = jest.fn(() => null)\n  return {CSSTransition: FakeCSSTransition}\n})\n\ntest('you can mock things with jest.mock', () => {\n  const {getByText} = render(<HiddenMessage initialShow={true} />)\n  const context = expect.any(Object)\n  const children = expect.any(Object)\n  const defaultProps = {children, timeout: 1000, className: 'fade'}\n  expect(CSSTransition).toHaveBeenCalledWith(\n    {in: true, ...defaultProps},\n    context,\n  )\n  fireEvent.click(getByText(/toggle/i))\n  expect(CSSTransition).toHaveBeenCalledWith(\n    {in: false, ...defaultProps},\n    expect.any(Object),\n  )\n})\n")))}m.isMDXComponent=!0}}]);