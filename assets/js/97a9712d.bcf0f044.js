"use strict";(self.webpackChunkreact_testing_library_docs=self.webpackChunkreact_testing_library_docs||[]).push([[3650],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=i,y=d["".concat(p,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(y,o(o({ref:t},c),{},{components:r})):n.createElement(y,o({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3421:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={id:"faq",title:"FAQ",sidebar_label:"FAQ"},p=void 0,s={unversionedId:"qwik-testing-library/faq",id:"qwik-testing-library/faq",title:"FAQ",description:"- How do I test file upload?",source:"@site/docs/qwik-testing-library/faq.mdx",sourceDirName:"qwik-testing-library",slug:"/qwik-testing-library/faq",permalink:"/docs/qwik-testing-library/faq",draft:!1,editUrl:"https://github.com/testing-library/testing-library-docs/edit/main/docs/qwik-testing-library/faq.mdx",tags:[],version:"current",lastUpdatedBy:"Jiaqi Liu",lastUpdatedAt:1750828179,formattedLastUpdatedAt:"Jun 25, 2025",frontMatter:{id:"faq",title:"FAQ",sidebar_label:"FAQ"},sidebar:"docs",previous:{title:"API",permalink:"/docs/qwik-testing-library/api"},next:{title:"Cypress Testing Library",permalink:"/docs/cypress-testing-library/intro"}},c={},u=[{value:"How do I test file upload?",id:"how-do-i-test-file-upload",level:2}],d={toc:u};function f(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#how-do-i-test-file-upload"},"How do I test file upload?"))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"how-do-i-test-file-upload"},"How do I test file upload?"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("a",{parentName:"p",href:"/docs/user-event/utility#upload"},"upload")," utility from ",(0,a.kt)("inlineCode",{parentName:"p"},"@testing-library/user-event"),". It works well in\nboth ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/jsdom/jsdom"},"jsdom")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/capricorn86/happy-dom"},"happy-dom"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"test('upload file', async () => {\n  const user = userEvent.setup()\n\n  await render(<Uploader />)\n  const file = new File(['hello'], 'hello.png', {type: 'image/png'})\n  const input = screen.getByLabelText(/upload file/i)\n\n  await user.upload(input, file)\n\n  expect(input.files[0]).toBe(file)\n  expect(input.files.item(0)).toBe(file)\n  expect(input.files).toHaveLength(1)\n})\n")))}f.isMDXComponent=!0}}]);